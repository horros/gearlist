@page "/mygear"
@inject NavigationManager Navigation
@inject IAuthenticationManager AuthenticationManager
@inject HttpClient Http
<h3>My Gear</h3>

<button class="btn btn-primary" @onclick="NewGear">Add gear</button>

@if (@gear == null) {
<p><em>Loading gear...</em></p>
} else {
    <p>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Type</th>
                    <th scope="col">Manufacturer</th>
                    <th scope="col">Model</th>
                    <th scope="col">Serial number</th>
                    <th scope="col">Year</th>
                    <th scope="col">Purchase date</th>
                    <th scope="col">Notes</th>
                </tr>
            </thead>
            <tbody>
                @foreach(GearModel item in @gear) {
                    <tr>
                        <td>@item.Type</td>
                        <td>@item.Manufacturer</td>
                        <td>@item.Model</td>
                        <td>@item.Serial</td>
                        <td>@item.Year</td>
                        <td>@item.PurchaseDate</td>
                        <td>@item.Notes</td>
                    </tr>
                }
            </tbody>
        </table>
    </p>
}


@code {

    private List<GearModel> gear;

    public void NewGear() {
        Navigation.NavigateTo("/newgear");
    }

    protected override async Task OnInitializedAsync() {
        if (gear == null) {
            try
            {

                var gettoken = await AuthenticationManager.GetAccessTokenAsync(
                    "https://mlgearlist.onmicrosoft.com/1a2c6297-8aca-450f-bd75-605267d0d0b1/api");
                var token = gettoken.AccessToken.ToString();

                Http.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token);
                var response = await Http.GetAsync(
                "https://gearlistcloudapp.azurewebsites.net/api/ListGear"
                // "http://localhost:7071/api/ListGear"
                );

                if (response.IsSuccessStatusCode) {
                    Console.WriteLine(await response.Content.ReadAsStringAsync());
                    gear = JsonSerializer.Deserialize<List<GearModel>>(await response.Content.ReadAsStringAsync());
                } else {
                    Console.WriteLine("RESPONSE: " + response);
                }
            }
            catch (Exception e)
            {
                Console.WriteLine(e);
                throw;
            }
        }
    }
}
