@page "/passwordreset-callback" @page "/authentication/passwordreset-callback"  @inject NavigationManager Navigation @using Microsoft.AspNetCore.WebUtilities;  <p>@_errorMessage</p> <p>@_errorDescription</p>  @code {     private string _errorMessage;     private string _errorDescription;     private string state { get; set; }     private string error { get; set; }     private string errorDescription { get; set; }      protected override void OnInitialized()     {          var uri = Navigation.ToAbsoluteUri(Navigation.Uri);         if (QueryHelpers.ParseQuery(uri.Query).TryGetValue("state", out var state))         {              if (state == "12345")             {                 QueryHelpers.ParseQuery(uri.Query).TryGetValue("error", out var error);                  QueryHelpers.ParseQuery(uri.Query).TryGetValue("error_description", out var errorDescription);                   if (error == "")                 {                     Navigation.NavigateTo("/");                 }                  _errorMessage = $"Error: {error}";                  _errorDescription = $"Description: {errorDescription}";             }         }         else         {             /// HALP THIS IS AAAAAWFUL!             QueryHelpers.ParseQuery(uri.Query).TryGetValue("q", out var query);             Console.WriteLine(query.ToString());             var qparts = query.ToString().Split("~and~");             foreach (var qpart in qparts)             {                 Console.WriteLine(qpart);                 var part = qpart.ToString().Split("=");                 if (part.Length == 2)                 {                     Console.Write(part[0] + " " + part[1]);                     if (part[0] == "state" && part[1] == "12345")                     {                         state = "12345";                     }                     else                     {                         switch (part[0])                         {                             case "error_description":                                 _errorDescription = $"Description: {part[1]}";                                 break;                             case "error":                                 _errorMessage = $"Error: {part[1]}";                                 break;                             default:                                 break;                         }                     }                  }             }         }          StateHasChanged();      } }